openapi: 3.0.3
info:
  userEmail: Transactions API
  description: Transactions API
  termsOfService: https://www.ledn.io/terms/
  contact:
    email: apiteam@ledn.io
  license:
    name: Unlicensed
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
externalDocs:
  description: Find out more about Ledn
  url: http://ledn.io
servers:
  - url: https://localhost:3000
tags:
  - name: account
    description: Everything about your Accounts
    externalDocs:
      description: Find out more
      url: http://ledn.io
  - name: transaction
    description: Transactions of an account
paths:
  /accounts:
    get:
      tags:
        - account
      summary: Get all accounts
      description: Returns a collection of all accounts
      operationId: getAccounts
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayOfAccounts'          
        '400':
          description: Invalid ID supplied
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Account not found
      security:
        - basicAuth: 
          - view_account
    post:
      tags:
        - account
      summary: Add a new account to the store
      description: Add a new account to the store
      operationId: addAccount
      requestBody:
        description: Create a new account in the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAccountDTO'
        required: true
      responses:
        '201':
          description: Account created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'          
        '400':
          description: Invalid request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
         - basicAuth: ["create_account"]
  /accounts/{id}:
    #delete:
    #  tags:
    #    - account
    #  summary: Delete account
    #  description: Deletes a single account
    #  operationId: deleteAccount
    #  parameters:
    #    - name: id
    #      in: path
    #      description: ID of account to return
    #      required: true
    #      schema:
    #        type: string
    #  responses:
    #    '200':
    #      description: successful operation
    #      content:
    #        application/json:
    #          schema:
    #            $ref: '#/components/schemas/Account'          
    #    '400':
    #      description: Invalid ID supplied
    #    '401':
    #      description: Unauthorized
    #    '403':
    #      description: Forbidden
    #    '404':
    #      description: Account not found
    #  security:
    #    - basicAuth: 
    #      - delete_account
    get:
      tags:
        - account
      summary: Get an account by ID
      description: Returns a single account
      operationId: getAccount
      parameters:
        - name: id
          in: path
          description: ID of account to return
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'          
        '400':
          description: Invalid ID supplied
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Account not found
      security:
        - basicAuth: 
          - view_account
  /accounts/{id}/checkIntegrity:
    get:
      tags:
        - account
      summary: Check account integrity given it ID
      description: Provide integrity information by comparing the account balance against the balance from account blockchain. Returns an Integrity object
      operationId: checkAccountIntegrity
      parameters:
        - name: id
          in: path
          description: ID of account to check the integrity
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Integrity'          
        '400':
          description: Invalid ID supplied
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Account not found
      security:
        - basicAuth: 
          - view_account
  /transactions:
    get:
      tags:
        - transaction
      summary: Get all transactions
      description: Returns a collection of all transactions
      operationId: getTransactions
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayOfTransactions'          
        '400':
          description: Invalid ID supplied
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Transaction not found
      security:
        - basicAuth: 
          - view_transaction
    post:
      tags:
        - transaction
      summary: Add a new transaction to the store
      description: Add a new transaction to the store
      operationId: addTransaction
      requestBody:
        description: Create a new transaction in the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTransactionDTO'
        required: true
      responses:
        '201':
          description: Transaction created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'          
        '400':
          description: Invalid request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
         - basicAuth: ["create_transaction"]
  /transactions/{id}:
    #delete:
    #  tags:
    #    - transaction
    #  summary: Delete transaction
    #  description: Deletes a single transaction
    #  operationId: deleteTransaction
    #  parameters:
    #    - name: id
    #      in: path
    #      description: ID of transaction to return
    #      required: true
    #      schema:
    #        type: string
    #  responses:
    #    '200':
    #      description: successful operation
    #      content:
    #        application/json:
    #          schema:
    #            $ref: '#/components/schemas/Transaction'          
    #    '400':
    #      description: Invalid ID supplied
    #    '401':
    #      description: Unauthorized
    #    '403':
    #      description: Forbidden
    #    '404':
    #      description: Transaction not found
    #  security:
    #    - basicAuth: 
    #      - delete_transaction
    get:
      tags:
        - transaction
      summary: Get an transaction by ID
      description: Returns a single transaction
      operationId: getTransaction
      parameters:
        - name: id
          in: path
          description: ID of transaction to return
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'          
        '400':
          description: Invalid ID supplied
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Transaction not found
      security:
        - basicAuth: 
          - view_transaction
    
components:
  schemas:
    CreateAccountDTO: 
      required:
        - userEmail
        - balance
      type: object
      properties:
        userEmail:
          type: string
        balance:
          type: number
          format: double
          example: 150.56
    Account:
      type: object
      properties:
        id: 
          type: string 
        userEmail: 
          type: string 
        balance: 
          type: number
          format: double
          example: 150.56
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    ArrayOfAccounts:
      type: array
      items:
        $ref: '#/components/schemas/Account'
    CreateTransactionDTO: 
      required:
        - userEmail
        - amount
        - type
      type: object
      properties:
        userEmail:
          type: string
        amount:
          type: number
          format: double
          example: 150.56
        type:
          type: string
          enum: 
            - send
            - receive
    Integrity:
      type: object
      properties:
        status: 
          type: string 
          enum: 
            - healthy
            - risky
    Transaction:
      type: object
      properties:
        id: 
          type: string 
        amount: 
          type: number
          format: double
          example: 150.56
        userEmail: 
          type: string 
          format: email
        type:
          type: string
          enum: 
            - send
            - receive
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    ArrayOfTransactions:
      type: array
      items:
        $ref: '#/components/schemas/Transaction'
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic